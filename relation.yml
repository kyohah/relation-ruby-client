openapi: 3.0.0
info:
  description: 'https://developer.ingage.jp/'
  version: 1.0.0
  title: Re:lation API

servers:
  - url: https://#{subdomain}.relationapp.jp/api/v2
    variables:
      subdomain:
        default: '*'
        description: ご利用のサブドメイン

tags:
  - name: message_box
    description: 受信箱
  - name: ticket
    description: チケット
  - name: customer
    description: アドレス帳

security:
  - bearer: []

paths:
  /message_boxes:
    get:
      tags:
        - message_box
      summary: 一覧取得
      responses:
        '200':
          description: 一覧取得
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageBox'

  /{message_box_id}/customers:
    post:
      parameters:
        - name: message_box_id
          in: path
          required: true
          description: Parameter description in CommonMark or HTML.
          schema:
            type : integer
            format: int64
            minimum: 1
      tags:
        - message_box
      summary: 登録
      responses:
        '200':
          description: 登録
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /{message_box_id}/records:
    post:
      tags:
        - message_box
      summary: 応答メモ作成
      parameters:
        - name: message_box_id
          in: path
          required: true
          description: 受信箱ID(数字)
          schema:
            type: integer
      requestBody:
        description: user to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordRequest'

      responses:
        '200':
          description: 応対メモ作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordResponse'

components:
  schemas:
    MessageBox:
      title: 受信箱
      description: 受信箱
      type: object
      properties:
        message_box_id:
          type: integer
          format: int64
        name:
          type: integer
          format: int64
        color:
          type: integer
          format: int32
        last_updated_at:
          type: string
          format: date-time
    Customer:
      title: アドレス帳
      description: アドレス帳
      type: object
      properties:
        last_name:
          type: string
        first:
          type: string
    RecordResponse:
      title: 応答メッセージ
      type: object
      properties:
        message_id:
          type: integer
        ticket_id:
          type: integer
    RecordRequest:
      title: 応答メッセージ
      type: object
      properties:
        ticket_id:
          type: integer
        subject:
          description: 件名
          type: string
        status_cd:
          description: ステータス
          type: string
          enum:
            - open
            - ongoing
            - closed
            - unwanted
            - trash
            - spam
            - deleted
        operated_at:
          description: 対応日時(ISO 8601 形式。過去の日時のみ。)
          type: string
          format: date
          example: 2022-09-11
        operator:
          description: 対応者のメンション名
          type: string
        duration:
          description: 対応時間(0〜1440の数値。分単位。)
          type: integer
        body:
          description: 本文
          type: string
        customer_email:
          description: 顧客メールアドレス
          type: string
          example: 'test@example.com'
        customer_tel:
          description: 顧客電話番号
          type: string
          example: '09000000000'
        icon_cd:
          description: 対応種別
          type: string
          enum:
          - received_phone
          - called_phone
          - meeting
          - sales
          - postal
          - note
        is_html:
          type: boolean
        assignee:
          type: string

  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Re:lation 画面右上ギアアイコンより、[API トークン設定] でアクセストークンを 発行・確認することができます。
